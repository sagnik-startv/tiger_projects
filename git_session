Script started on 2023-03-12 23:24:54+05:30 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="148" LINES="35"]
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ script -a ~/my_unix_session[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd Desktop/shell-lesson-data/exercise-data[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[15Pscript -a ~/my_unix_session[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kscript -a ~/my_unix_session[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd Desktop/shell-lesson-data/exercise-data/writing[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[15Pscript -a ~/my_unix_session[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[7mgit --system config[27mgit --system config
[?2004lunknown option: --system
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [K]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ git help
[?2004lusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ ls - all
[?2004lls: cannot access '-': No such file or directory
ls: cannot access 'all': No such file or directory
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ ls - all[1Pall
[?2004ltotal 184
drwxr-x--- 6 sagnik sagnik  4096 Mar 12 23:24 [0m[01;34m.[0m
drwxr-xr-x 3 root   root    4096 Feb 18 20:23 [01;34m..[0m
-rw------- 1 sagnik sagnik  5143 Mar 12 23:08 .bash_history
-rw-r--r-- 1 sagnik sagnik   220 Feb 18 20:23 .bash_logout
-rw-r--r-- 1 sagnik sagnik  3771 Feb 18 20:23 .bashrc
-rw------- 1 sagnik sagnik    20 Mar 12 21:12 .lesshst
drwxr-xr-x 3 sagnik sagnik  4096 Mar 12 21:18 [01;34m.local[0m
-rw-r--r-- 1 sagnik sagnik     0 Mar 12 13:15 .motd_shown
-rw-r--r-- 1 sagnik sagnik   807 Feb 18 20:23 .profile
-rw-r--r-- 1 sagnik sagnik     0 Mar 12 13:27 .sudo_as_admin_successful
drwxr-xr-x 2 sagnik sagnik  4096 Mar 12 21:15 [01;34mbin[0m
-rw-r--r-- 1 sagnik sagnik     0 Mar 12 23:24 git_session
-rw-r--r-- 1 sagnik sagnik 94476 Mar 12 22:45 my_unix_session
drwxr-xr-x 2 sagnik sagnik  4096 Mar 12 21:24 [01;34mproject[0m
drwxr-xr-x 2 sagnik sagnik  4096 Mar 12 21:44 [01;34mthesis[0m
-rw-r--r-- 1 sagnik sagnik 31472 Mar 12 22:00 unix_session
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [7mgit config --system[27mgit config --system
[?2004lusage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ git config [7m--show-origin[27m--show-origin
[?2004lusage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [7mgit config --global user.name "Agnibha-Roy"[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit config --global user.name "Agnibha-Roy"[C[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[7msagnik-startv[27m"sagnik-startv"
[?2004l[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [7mgit config --list[27mgit config --list
[?2004l[?1h=user.name=sagnik-startv[m
[K[?1l>[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [7mgit config user.name[27mgit config user.name [7msagnik-startv[27msagnik-startv
[?2004lfatal: not in a git directory
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ git config user.name sagnik-startv[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[?2004lsagnik-startv
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ git config user.name [7minit.defaultBranch[27minit.defaultBranch
[?2004lfatal: not in a git directory
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [7mgit config --global init.defaultBranch[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit config --global init.defaultBranch main masr[Kter
[?2004l[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ git config --global init.defaultBranch main master[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Puser.name init.defaultBranch[K sagnik-startv--list[K
[?2004l[?1h=user.name=sagnik-startv[m
init.defaultbranch=main[m
[K[?1l>[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ git config --listglobal init.defaultBranch main master[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Puser.name init.defaultBranch[K sagnik-startv--list[Kglobal user.name "sagnik-startv"[1P "sagnik-startv"[1P "sagnik-startv"[1P "sagnik-startv"[1P "sagnik-startv"e "sagnik-startv"m "sagnik-startv"a "sagnik-startv"i "sagnik-startv"l "sagnik-startv"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P"[1P"[1P"[1P"[1P"[1P"[1P"."g"a"n"g"u"l"y"@"t"i"g" [A]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce"r"a"n"a"l"y"t"i"c"s"."c"o"m"
[?2004l[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ git config --global user.email "sagnik.ganguly@tigeranalytics.com"[A]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[Clist[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1h=user.name=sagnik-startv[m
user.email=sagnik.ganguly@tigeranalytics.com[m
init.defaultbranch=main[m
[K[?1l>[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ ls -all
[?2004ltotal 200
drwxr-x--- 6 sagnik sagnik  4096 Mar 12 23:32 [0m[01;34m.[0m
drwxr-xr-x 3 root   root    4096 Feb 18 20:23 [01;34m..[0m
-rw------- 1 sagnik sagnik  5143 Mar 12 23:08 .bash_history
-rw-r--r-- 1 sagnik sagnik   220 Feb 18 20:23 .bash_logout
-rw-r--r-- 1 sagnik sagnik  3771 Feb 18 20:23 .bashrc
-rw-r--r-- 1 sagnik sagnik   101 Mar 12 23:32 .gitconfig
-rw------- 1 sagnik sagnik    20 Mar 12 23:32 .lesshst
drwxr-xr-x 3 sagnik sagnik  4096 Mar 12 21:18 [01;34m.local[0m
-rw-r--r-- 1 sagnik sagnik     0 Mar 12 13:15 .motd_shown
-rw-r--r-- 1 sagnik sagnik   807 Feb 18 20:23 .profile
-rw-r--r-- 1 sagnik sagnik     0 Mar 12 13:27 .sudo_as_admin_successful
drwxr-xr-x 2 sagnik sagnik  4096 Mar 12 21:15 [01;34mbin[0m
-rw-r--r-- 1 sagnik sagnik 12288 Mar 12 23:32 git_session
-rw-r--r-- 1 sagnik sagnik 94476 Mar 12 22:45 my_unix_session
drwxr-xr-x 2 sagnik sagnik  4096 Mar 12 21:24 [01;34mproject[0m
drwxr-xr-x 2 sagnik sagnik  4096 Mar 12 21:44 [01;34mthesis[0m
-rw-r--r-- 1 sagnik sagnik 31472 Mar 12 22:00 unix_session
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [7mgit config --show-origin[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit config --show-origin
[?2004lusage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ git add help config
[?2004lfatal: not a git repository (or any of the parent directories): .git
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ git add help config[K[K[K[K[K[K[K
[?2004lfatal: not a git repository (or any of the parent directories): .git
[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ [7mgit add -h[27mgit add -h
[?2004lusage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ mkdir my_project
[?2004l[?2004h]0;sagnik@TIGER01038: ~[01;32msagnik@TIGER01038[00m:[01;34m~[00m$ cd my_project
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project[01;32msagnik@TIGER01038[00m:[01;34m~/my_project[00m$ [7mgit init[27mgit init
[?2004lInitialized empty Git repository in /home/sagnik/my_project/.git/
[?2004h]0;sagnik@TIGER01038: ~/my_project[01;32msagnik@TIGER01038[00m:[01;34m~/my_project[00m$ ls
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project[01;32msagnik@TIGER01038[00m:[01;34m~/my_project[00m$ ls -all
[?2004ltotal 12
drwxr-xr-x 3 sagnik sagnik 4096 Mar 12 23:35 [0m[01;34m.[0m
drwxr-x--- 7 sagnik sagnik 4096 Mar 12 23:34 [01;34m..[0m
drwxr-xr-x 7 sagnik sagnik 4096 Mar 12 23:35 [01;34m.git[0m
[?2004h]0;sagnik@TIGER01038: ~/my_project[01;32msagnik@TIGER01038[00m:[01;34m~/my_project[00m$ info ls
[?2004l[?1h=[?1049h[22;0;0t[H[2J[34;1HWelcome to Info version 6.8.  Type H for help, h for tutorial.[34;1Hgzip -d < /usr/share/info/coreutils.info.gz...[K[34;1HWelcome to Info version 6.8.  Type H for help, h for tutorial.[33;1H[7m-----Info: (coreutils)ls invocation, 62 lines --Top---------------------[0m[1;1HNext: dir invocation,  Up: Directory listing[3;1H10.1 ‘ls’: List directory contents[4;1H==================================[6;1HThe ‘ls’ program lists information about files (of any type, including[7;1Hdirectories).  Options and file arguments can be intermixed arbitrarily[7;72H\[8;1H,[9;1Has usual.[11;1H   For non-option command-line arguments that are directories, by[12;1Hdefault ‘ls’ lists the contents of directories, not recursively, and[13;1Homitting files with names beginning with ‘.’.  For other non-option[14;1Harguments, by default ‘ls’ lists just the file name.  If no non-option[15;1Hargument is specified, ‘ls’ operates on the current directory, acting a[15;72H\[16;1Hs[17;1Hif it had been invoked with a single argument of ‘.’.[19;1H   By default, the output is sorted alphabetically, according to the[20;1Hlocale settings in effect.(1)  If standard output is a terminal, the[21;1Houtput is in columns (sorted vertically) and control characters are[22;1Houtput as question marks; otherwise, the output is listed one per line[23;1Hand control characters are output as-is.[25;1H   Because ‘ls’ is such a fundamental program, it has accumulated many[26;1Hoptions over the years.  They are described in the subsections below;[27;1Hwithin each section, options are listed alphabetically (ignoring case).[28;1HThe division of options into the subsections is not absolute, since som[28;72H\[29;1He[30;1Hoptions affect more than one aspect of ‘ls’’s operation.[32;1H   Exit status:[7;72H\[15;72H\[28;72H\[1;1H[1;1H[34;1H[K[34;1H[K[?1l>[?1049l[23;0;0t[34;1H[K[?1l>[?1049l[23;0;0t[?2004h]0;sagnik@TIGER01038: ~/my_project[01;32msagnik@TIGER01038[00m:[01;34m~/my_project[00m$ ls --help
[?2004lUsage: ls [OPTION]... [FILE]...
List information about the FILEs (the current directory by default).
Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.

Mandatory arguments to long options are mandatory for short options too.
  -a, --all                  do not ignore entries starting with .
  -A, --almost-all           do not list implied . and ..
      --author               with -l, print the author of each file
  -b, --escape               print C-style escapes for nongraphic characters
      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;
                               e.g., '--block-size=M'; see SIZE format below
  -B, --ignore-backups       do not list implied entries ending with ~
  -c                         with -lt: sort by, and show, ctime (time of last
                               modification of file status information);
                               with -l: show ctime and sort by name;
                               otherwise: sort by ctime, newest first
  -C                         list entries by columns
      --color[=WHEN]         colorize the output; WHEN can be 'always' (default
                               if omitted), 'auto', or 'never'; more info below
  -d, --directory            list directories themselves, not their contents
  -D, --dired                generate output designed for Emacs' dired mode
  -f                         do not sort, enable -aU, disable -ls --color
  -F, --classify             append indicator (one of */=>@|) to entries
      --file-type            likewise, except do not append '*'
      --format=WORD          across -x, commas -m, horizontal -x, long -l,
                               single-column -1, verbose -l, vertical -C
      --full-time            like -l --time-style=full-iso
  -g                         like -l, but do not list owner
      --group-directories-first
                             group directories before files;
                               can be augmented with a --sort option, but any
                               use of --sort=none (-U) disables grouping
  -G, --no-group             in a long listing, don't print group names
  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.
      --si                   likewise, but use powers of 1000 not 1024
  -H, --dereference-command-line
                             follow symbolic links listed on the command line
      --dereference-command-line-symlink-to-dir
                             follow each command line symbolic link
                               that points to a directory
      --hide=PATTERN         do not list implied entries matching shell PATTERN
                               (overridden by -a or -A)
      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'
                               (default if omitted), 'auto', or 'never'
      --indicator-style=WORD  append indicator with style WORD to entry names:
                               none (default), slash (-p),
                               file-type (--file-type), classify (-F)
  -i, --inode                print the index number of each file
  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN
  -k, --kibibytes            default to 1024-byte blocks for disk usage;
                               used only with -s and per directory totals
  -l                         use a long listing format
  -L, --dereference          when showing file information for a symbolic
                               link, show information for the file the link
                               references rather than for the link itself
  -m                         fill width with a comma separated list of entries
  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs
  -N, --literal              print entry names without quoting
  -o                         like -l, but do not list group information
  -p, --indicator-style=slash
                             append / indicator to directories
  -q, --hide-control-chars   print ? instead of nongraphic characters
      --show-control-chars   show nongraphic characters as-is (the default,
                               unless program is 'ls' and output is a terminal)
  -Q, --quote-name           enclose entry names in double quotes
      --quoting-style=WORD   use quoting style WORD for entry names:
                               literal, locale, shell, shell-always,
                               shell-escape, shell-escape-always, c, escape
                               (overrides QUOTING_STYLE environment variable)
  -r, --reverse              reverse order while sorting
  -R, --recursive            list subdirectories recursively
  -s, --size                 print the allocated size of each file, in blocks
  -S                         sort by file size, largest first
      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),
                               time (-t), version (-v), extension (-X)
      --time=WORD            change the default of using modification times;
                               access time (-u): atime, access, use;
                               change time (-c): ctime, status;
                               birth time: birth, creation;
                             with -l, WORD determines which time to show;
                             with --sort=time, sort by WORD (newest first)
      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below
  -t                         sort by time, newest first; see --time
  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8
  -u                         with -lt: sort by, and show, access time;
                               with -l: show access time and sort by name;
                               otherwise: sort by access time, newest first
  -U                         do not sort; list entries in directory order
  -v                         natural sort of (version) numbers within text
  -w, --width=COLS           set output width to COLS.  0 means no limit
  -x                         list entries by lines instead of by columns
  -X                         sort alphabetically by entry extension
  -Z, --context              print any security context of each file
  -1                         list one file per line.  Avoid '\n' with -q or -b
      --help     display this help and exit
      --version  output version information and exit

The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).
Binary prefixes can be used, too: KiB=K, MiB=M, and so on.

The TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.
FORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,
then FORMAT1 applies to non-recent files and FORMAT2 to recent files.
TIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.
Also the TIME_STYLE environment variable sets the default style to use.

Using color to distinguish file types is disabled both by default and
with --color=never.  With --color=auto, ls emits color codes only when
standard output is connected to a terminal.  The LS_COLORS environment
variable can change the settings.  Use the dircolors command to set it.

Exit status:
 0  if OK,
 1  if minor problems (e.g., cannot access subdirectory),
 2  if serious trouble (e.g., cannot access command-line argument).

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Report any translation bugs to <https://translationproject.org/team/>
Full documentation <https://www.gnu.org/software/coreutils/ls>
or available locally via: info '(coreutils) ls invocation'
[?2004h]0;sagnik@TIGER01038: ~/my_project[01;32msagnik@TIGER01038[00m:[01;34m~/my_project[00m$ [7mgit clone https://github.com/libgit2/lib[27m[7mg[27m[7mit2 mylibgit[27m[A]0;sagnik@TIGER01038: ~/my_project[01;32msagnik@TIGER01038[00m:[01;34m~/my_project[00m$ git clone https://github.com/libgit2/libgit2 mylibgit
[?2004lCloning into 'mylibgit'...
remote: Enumerating objects: 119268[Kremote: Enumerating objects: 120939, done.[K
remote: Counting objects:   0% (1/120939)[Kremote: Counting objects:   1% (1210/120939)[Kremote: Counting objects:   2% (2419/120939)[Kremote: Counting objects:   3% (3629/120939)[Kremote: Counting objects:   4% (4838/120939)[Kremote: Counting objects:   5% (6047/120939)[Kremote: Counting objects:   6% (7257/120939)[Kremote: Counting objects:   7% (8466/120939)[Kremote: Counting objects:   8% (9676/120939)[Kremote: Counting objects:   9% (10885/120939)[Kremote: Counting objects:  10% (12094/120939)[Kremote: Counting objects:  11% (13304/120939)[Kremote: Counting objects:  12% (14513/120939)[Kremote: Counting objects:  13% (15723/120939)[Kremote: Counting objects:  14% (16932/120939)[Kremote: Counting objects:  15% (18141/120939)[Kremote: Counting objects:  16% (19351/120939)[Kremote: Counting objects:  17% (20560/120939)[Kremote: Counting objects:  18% (21770/120939)[Kremote: Counting objects:  19% (22979/120939)[Kremote: Counting objects:  20% (24188/120939)[Kremote: Counting objects:  21% (25398/120939)[Kremote: Counting objects:  22% (26607/120939)[Kremote: Counting objects:  23% (27816/120939)[Kremote: Counting objects:  24% (29026/120939)[Kremote: Counting objects:  25% (30235/120939)[Kremote: Counting objects:  26% (31445/120939)[Kremote: Counting objects:  27% (32654/120939)[Kremote: Counting objects:  28% (33863/120939)[Kremote: Counting objects:  29% (35073/120939)[Kremote: Counting objects:  30% (36282/120939)[Kremote: Counting objects:  31% (37492/120939)[Kremote: Counting objects:  32% (38701/120939)[Kremote: Counting objects:  33% (39910/120939)[Kremote: Counting objects:  34% (41120/120939)[Kremote: Counting objects:  35% (42329/120939)[Kremote: Counting objects:  36% (43539/120939)[Kremote: Counting objects:  37% (44748/120939)[Kremote: Counting objects:  38% (45957/120939)[Kremote: Counting objects:  39% (47167/120939)[Kremote: Counting objects:  40% (48376/120939)[Kremote: Counting objects:  41% (49585/120939)[Kremote: Counting objects:  42% (50795/120939)[Kremote: Counting objects:  43% (52004/120939)[Kremote: Counting objects:  44% (53214/120939)[Kremote: Counting objects:  45% (54423/120939)[Kremote: Counting objects:  46% (55632/120939)[Kremote: Counting objects:  47% (56842/120939)[Kremote: Counting objects:  48% (58051/120939)[Kremote: Counting objects:  49% (59261/120939)[Kremote: Counting objects:  50% (60470/120939)[Kremote: Counting objects:  51% (61679/120939)[Kremote: Counting objects:  52% (62889/120939)[Kremote: Counting objects:  53% (64098/120939)[Kremote: Counting objects:  54% (65308/120939)[Kremote: Counting objects:  55% (66517/120939)[Kremote: Counting objects:  56% (67726/120939)[Kremote: Counting objects:  57% (68936/120939)[Kremote: Counting objects:  58% (70145/120939)[Kremote: Counting objects:  59% (71355/120939)[Kremote: Counting objects:  60% (72564/120939)[Kremote: Counting objects:  61% (73773/120939)[Kremote: Counting objects:  62% (74983/120939)[Kremote: Counting objects:  63% (76192/120939)[Kremote: Counting objects:  64% (77401/120939)[Kremote: Counting objects:  65% (78611/120939)[Kremote: Counting objects:  66% (79820/120939)[Kremote: Counting objects:  67% (81030/120939)[Kremote: Counting objects:  68% (82239/120939)[Kremote: Counting objects:  69% (83448/120939)[Kremote: Counting objects:  70% (84658/120939)[Kremote: Counting objects:  71% (85867/120939)[Kremote: Counting objects:  72% (87077/120939)[Kremote: Counting objects:  73% (88286/120939)[Kremote: Counting objects:  74% (89495/120939)[Kremote: Counting objects:  75% (90705/120939)[Kremote: Counting objects:  76% (91914/120939)[Kremote: Counting objects:  77% (93124/120939)[Kremote: Counting objects:  78% (94333/120939)[Kremote: Counting objects:  79% (95542/120939)[Kremote: Counting objects:  80% (96752/120939)[Kremote: Counting objects:  81% (97961/120939)[Kremote: Counting objects:  82% (99170/120939)[Kremote: Counting objects:  83% (100380/120939)[Kremote: Counting objects:  84% (101589/120939)[Kremote: Counting objects:  85% (102799/120939)[Kremote: Counting objects:  86% (104008/120939)[Kremote: Counting objects:  87% (105217/120939)[Kremote: Counting objects:  88% (106427/120939)[Kremote: Counting objects:  89% (107636/120939)[Kremote: Counting objects:  90% (108846/120939)[Kremote: Counting objects:  91% (110055/120939)[Kremote: Counting objects:  92% (111264/120939)[Kremote: Counting objects:  93% (112474/120939)[Kremote: Counting objects:  94% (113683/120939)[Kremote: Counting objects:  95% (114893/120939)[Kremote: Counting objects:  96% (116102/120939)[Kremote: Counting objects:  97% (117311/120939)[Kremote: Counting objects:  98% (118521/120939)[Kremote: Counting objects:  99% (119730/120939)[Kremote: Counting objects: 100% (120939/120939)[Kremote: Counting objects: 100% (120939/120939), done.[K
remote: Compressing objects:   0% (1/33074)[Kremote: Compressing objects:   1% (331/33074)[Kremote: Compressing objects:   2% (662/33074)[Kremote: Compressing objects:   3% (993/33074)[Kremote: Compressing objects:   4% (1323/33074)[Kremote: Compressing objects:   5% (1654/33074)[Kremote: Compressing objects:   6% (1985/33074)[Kremote: Compressing objects:   7% (2316/33074)[Kremote: Compressing objects:   8% (2646/33074)[Kremote: Compressing objects:   9% (2977/33074)[Kremote: Compressing objects:  10% (3308/33074)[Kremote: Compressing objects:  11% (3639/33074)[Kremote: Compressing objects:  12% (3969/33074)[Kremote: Compressing objects:  13% (4300/33074)[Kremote: Compressing objects:  14% (4631/33074)[Kremote: Compressing objects:  15% (4962/33074)[Kremote: Compressing objects:  16% (5292/33074)[Kremote: Compressing objects:  17% (5623/33074)[Kremote: Compressing objects:  18% (5954/33074)[Kremote: Compressing objects:  19% (6285/33074)[Kremote: Compressing objects:  20% (6615/33074)[Kremote: Compressing objects:  21% (6946/33074)[Kremote: Compressing objects:  22% (7277/33074)[Kremote: Compressing objects:  23% (7608/33074)[Kremote: Compressing objects:  24% (7938/33074)[Kremote: Compressing objects:  25% (8269/33074)[Kremote: Compressing objects:  26% (8600/33074)[Kremote: Compressing objects:  27% (8930/33074)[Kremote: Compressing objects:  28% (9261/33074)[Kremote: Compressing objects:  29% (9592/33074)[Kremote: Compressing objects:  30% (9923/33074)[Kremote: Compressing objects:  31% (10253/33074)[Kremote: Compressing objects:  32% (10584/33074)[Kremote: Compressing objects:  33% (10915/33074)[Kremote: Compressing objects:  34% (11246/33074)[Kremote: Compressing objects:  35% (11576/33074)[Kremote: Compressing objects:  36% (11907/33074)[Kremote: Compressing objects:  37% (12238/33074)[Kremote: Compressing objects:  38% (12569/33074)[Kremote: Compressing objects:  39% (12899/33074)[Kremote: Compressing objects:  40% (13230/33074)[Kremote: Compressing objects:  41% (13561/33074)[Kremote: Compressing objects:  42% (13892/33074)[Kremote: Compressing objects:  43% (14222/33074)[Kremote: Compressing objects:  44% (14553/33074)[Kremote: Compressing objects:  45% (14884/33074)[Kremote: Compressing objects:  46% (15215/33074)[Kremote: Compressing objects:  47% (15545/33074)[Kremote: Compressing objects:  48% (15876/33074)[Kremote: Compressing objects:  49% (16207/33074)[Kremote: Compressing objects:  50% (16537/33074)[Kremote: Compressing objects:  51% (16868/33074)[Kremote: Compressing objects:  52% (17199/33074)[Kremote: Compressing objects:  53% (17530/33074)[Kremote: Compressing objects:  54% (17860/33074)[Kremote: Compressing objects:  55% (18191/33074)[Kremote: Compressing objects:  56% (18522/33074)[Kremote: Compressing objects:  57% (18853/33074)[Kremote: Compressing objects:  58% (19183/33074)[Kremote: Compressing objects:  59% (19514/33074)[Kremote: Compressing objects:  60% (19845/33074)[Kremote: Compressing objects:  61% (20176/33074)[Kremote: Compressing objects:  62% (20506/33074)[Kremote: Compressing objects:  63% (20837/33074)[Kremote: Compressing objects:  64% (21168/33074)[Kremote: Compressing objects:  65% (21499/33074)[Kremote: Compressing objects:  66% (21829/33074)[Kremote: Compressing objects:  67% (22160/33074)[Kremote: Compressing objects:  68% (22491/33074)[Kremote: Compressing objects:  69% (22822/33074)[Kremote: Compressing objects:  70% (23152/33074)[Kremote: Compressing objects:  71% (23483/33074)[Kremote: Compressing objects:  72% (23814/33074)[Kremote: Compressing objects:  73% (24145/33074)[Kremote: Compressing objects:  74% (24475/33074)[Kremote: Compressing objects:  75% (24806/33074)[Kremote: Compressing objects:  76% (25137/33074)[Kremote: Compressing objects:  77% (25467/33074)[Kremote: Compressing objects:  78% (25798/33074)[Kremote: Compressing objects:  79% (26129/33074)[Kremote: Compressing objects:  80% (26460/33074)[Kremote: Compressing objects:  81% (26790/33074)[Kremote: Compressing objects:  82% (27121/33074)[Kremote: Compressing objects:  83% (27452/33074)[Kremote: Compressing objects:  84% (27783/33074)[Kremote: Compressing objects:  85% (28113/33074)[Kremote: Compressing objects:  86% (28444/33074)[Kremote: Compressing objects:  87% (28775/33074)[Kremote: Compressing objects:  88% (29106/33074)[Kremote: Compressing objects:  89% (29436/33074)[Kremote: Compressing objects:  90% (29767/33074)[Kremote: Compressing objects:  91% (30098/33074)[Kremote: Compressing objects:  92% (30429/33074)[Kremote: Compressing objects:  93% (30759/33074)[Kremote: Compressing objects:  94% (31090/33074)[Kremote: Compressing objects:  95% (31421/33074)[Kremote: Compressing objects:  96% (31752/33074)[Kremote: Compressing objects:  97% (32082/33074)[Kremote: Compressing objects:  98% (32413/33074)[Kremote: Compressing objects:  99% (32744/33074)[Kremote: Compressing objects: 100% (33074/33074)[Kremote: Compressing objects: 100% (33074/33074), done.[K
Receiving objects:   0% (1/120939)Receiving objects:   1% (1210/120939), 108.00 KiB | 199.00 KiB/sReceiving objects:   1% (1561/120939), 492.00 KiB | 475.00 KiB/sReceiving objects:   2% (2419/120939), 492.00 KiB | 475.00 KiB/sReceiving objects:   3% (3629/120939), 492.00 KiB | 475.00 KiB/sReceiving objects:   4% (4838/120939), 1.45 MiB | 964.00 KiB/s  Receiving objects:   5% (6047/120939), 1.45 MiB | 964.00 KiB/sReceiving objects:   6% (7257/120939), 1.45 MiB | 964.00 KiB/sReceiving objects:   6% (7456/120939), 2.52 MiB | 1.23 MiB/s  Receiving objects:   7% (8466/120939), 2.52 MiB | 1.23 MiB/sReceiving objects:   8% (9676/120939), 2.52 MiB | 1.23 MiB/sReceiving objects:   9% (10885/120939), 2.52 MiB | 1.23 MiB/sReceiving objects:  10% (12094/120939), 2.52 MiB | 1.23 MiB/sReceiving objects:  11% (13304/120939), 3.70 MiB | 1.44 MiB/sReceiving objects:  12% (14513/120939), 3.70 MiB | 1.44 MiB/sReceiving objects:  13% (15723/120939), 3.70 MiB | 1.44 MiB/sReceiving objects:  13% (16551/120939), 3.70 MiB | 1.44 MiB/sReceiving objects:  14% (16932/120939), 3.70 MiB | 1.44 MiB/sReceiving objects:  15% (18141/120939), 4.92 MiB | 1.60 MiB/sReceiving objects:  16% (19351/120939), 4.92 MiB | 1.60 MiB/sReceiving objects:  17% (20560/120939), 4.92 MiB | 1.60 MiB/sReceiving objects:  18% (21770/120939), 4.92 MiB | 1.60 MiB/sReceiving objects:  19% (22979/120939), 6.16 MiB | 1.72 MiB/sReceiving objects:  20% (24188/120939), 6.16 MiB | 1.72 MiB/sReceiving objects:  21% (25398/120939), 6.16 MiB | 1.72 MiB/sReceiving objects:  22% (26607/120939), 6.16 MiB | 1.72 MiB/sReceiving objects:  22% (27698/120939), 6.16 MiB | 1.72 MiB/sReceiving objects:  23% (27816/120939), 9.33 MiB | 2.04 MiB/sReceiving objects:  23% (27832/120939), 9.33 MiB | 2.04 MiB/sReceiving objects:  24% (29026/120939), 12.95 MiB | 2.74 MiB/sReceiving objects:  24% (29845/120939), 12.95 MiB | 2.74 MiB/sReceiving objects:  25% (30235/120939), 15.14 MiB | 3.01 MiB/sReceiving objects:  26% (31445/120939), 15.14 MiB | 3.01 MiB/sReceiving objects:  27% (32654/120939), 15.14 MiB | 3.01 MiB/sReceiving objects:  28% (33863/120939), 17.57 MiB | 3.32 MiB/sReceiving objects:  28% (34575/120939), 17.57 MiB | 3.32 MiB/sReceiving objects:  29% (35073/120939), 20.21 MiB | 3.65 MiB/sReceiving objects:  30% (36282/120939), 20.21 MiB | 3.65 MiB/sReceiving objects:  31% (37492/120939), 20.21 MiB | 3.65 MiB/sReceiving objects:  32% (38701/120939), 20.21 MiB | 3.65 MiB/sReceiving objects:  33% (39910/120939), 20.21 MiB | 3.65 MiB/sReceiving objects:  34% (41120/120939), 22.96 MiB | 3.98 MiB/sReceiving objects:  35% (42329/120939), 22.96 MiB | 3.98 MiB/sReceiving objects:  35% (43278/120939), 22.96 MiB | 3.98 MiB/sReceiving objects:  36% (43539/120939), 22.96 MiB | 3.98 MiB/sReceiving objects:  37% (44748/120939), 26.04 MiB | 4.38 MiB/sReceiving objects:  38% (45957/120939), 26.04 MiB | 4.38 MiB/sReceiving objects:  39% (47167/120939), 26.04 MiB | 4.38 MiB/sReceiving objects:  40% (48376/120939), 26.04 MiB | 4.38 MiB/sReceiving objects:  41% (49585/120939), 26.04 MiB | 4.38 MiB/sReceiving objects:  42% (50795/120939), 26.04 MiB | 4.38 MiB/sReceiving objects:  43% (52004/120939), 29.31 MiB | 4.76 MiB/sReceiving objects:  44% (53214/120939), 29.31 MiB | 4.76 MiB/sReceiving objects:  45% (54423/120939), 29.31 MiB | 4.76 MiB/sReceiving objects:  45% (54819/120939), 29.31 MiB | 4.76 MiB/sReceiving objects:  46% (55632/120939), 29.31 MiB | 4.76 MiB/sReceiving objects:  47% (56842/120939), 32.69 MiB | 5.15 MiB/sReceiving objects:  48% (58051/120939), 32.69 MiB | 5.15 MiB/sReceiving objects:  49% (59261/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  50% (60470/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  51% (61679/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  52% (62889/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  53% (64098/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  54% (65308/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  55% (66517/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  56% (67726/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  56% (68368/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  57% (68936/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  58% (70145/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  59% (71355/120939), 36.14 MiB | 5.52 MiB/sReceiving objects:  60% (72564/120939), 39.96 MiB | 5.92 MiB/sReceiving objects:  61% (73773/120939), 39.96 MiB | 5.92 MiB/sReceiving objects:  61% (74710/120939), 42.71 MiB | 5.10 MiB/sReceiving objects:  61% (74791/120939), 46.08 MiB | 4.72 MiB/sReceiving objects:  61% (74870/120939), 46.08 MiB | 4.72 MiB/sReceiving objects:  62% (74983/120939), 47.27 MiB | 4.44 MiB/sReceiving objects:  63% (76192/120939), 47.27 MiB | 4.44 MiB/sReceiving objects:  63% (76845/120939), 48.56 MiB | 3.83 MiB/sReceiving objects:  64% (77401/120939), 48.56 MiB | 3.83 MiB/sReceiving objects:  65% (78611/120939), 48.56 MiB | 3.83 MiB/sReceiving objects:  66% (79820/120939), 48.56 MiB | 3.83 MiB/sReceiving objects:  67% (81030/120939), 48.56 MiB | 3.83 MiB/sReceiving objects:  68% (82239/120939), 50.24 MiB | 3.54 MiB/sReceiving objects:  69% (83448/120939), 50.24 MiB | 3.54 MiB/sReceiving objects:  70% (84658/120939), 50.24 MiB | 3.54 MiB/sReceiving objects:  71% (85867/120939), 50.24 MiB | 3.54 MiB/sReceiving objects:  71% (86216/120939), 50.24 MiB | 3.54 MiB/sReceiving objects:  72% (87077/120939), 53.37 MiB | 3.49 MiB/sReceiving objects:  73% (88286/120939), 53.37 MiB | 3.49 MiB/sReceiving objects:  74% (89495/120939), 53.37 MiB | 3.49 MiB/sReceiving objects:  75% (90705/120939), 54.62 MiB | 3.13 MiB/sReceiving objects:  76% (91914/120939), 54.62 MiB | 3.13 MiB/sReceiving objects:  77% (93124/120939), 54.62 MiB | 3.13 MiB/sReceiving objects:  78% (94333/120939), 54.62 MiB | 3.13 MiB/sReceiving objects:  78% (94411/120939), 54.62 MiB | 3.13 MiB/sReceiving objects:  79% (95542/120939), 55.89 MiB | 2.70 MiB/sReceiving objects:  80% (96752/120939), 55.89 MiB | 2.70 MiB/sReceiving objects:  81% (97961/120939), 55.89 MiB | 2.70 MiB/sReceiving objects:  82% (99170/120939), 55.89 MiB | 2.70 MiB/sReceiving objects:  83% (100380/120939), 57.32 MiB | 2.66 MiB/sReceiving objects:  84% (101589/120939), 57.32 MiB | 2.66 MiB/sReceiving objects:  85% (102799/120939), 57.32 MiB | 2.66 MiB/sReceiving objects:  86% (104008/120939), 57.32 MiB | 2.66 MiB/sReceiving objects:  86% (104684/120939), 57.32 MiB | 2.66 MiB/sReceiving objects:  87% (105217/120939), 57.32 MiB | 2.66 MiB/sReceiving objects:  88% (106427/120939), 58.78 MiB | 2.90 MiB/sReceiving objects:  89% (107636/120939), 58.78 MiB | 2.90 MiB/sReceiving objects:  90% (108846/120939), 58.78 MiB | 2.90 MiB/sReceiving objects:  91% (110055/120939), 58.78 MiB | 2.90 MiB/sReceiving objects:  92% (111264/120939), 59.96 MiB | 2.73 MiB/sReceiving objects:  93% (112474/120939), 59.96 MiB | 2.73 MiB/sReceiving objects:  94% (113683/120939), 59.96 MiB | 2.73 MiB/sReceiving objects:  94% (114800/120939), 59.96 MiB | 2.73 MiB/sReceiving objects:  95% (114893/120939), 59.96 MiB | 2.73 MiB/sReceiving objects:  96% (116102/120939), 59.96 MiB | 2.73 MiB/sReceiving objects:  97% (117311/120939), 59.96 MiB | 2.73 MiB/sReceiving objects:  98% (118521/120939), 61.36 MiB | 2.77 MiB/sReceiving objects:  99% (119730/120939), 61.36 MiB | 2.77 MiB/sremote: Total 120939 (delta 85914), reused 120873 (delta 85856), pack-reused 0[K
Receiving objects: 100% (120939/120939), 61.36 MiB | 2.77 MiB/sReceiving objects: 100% (120939/120939), 62.43 MiB | 3.35 MiB/s, done.
Resolving deltas:   0% (0/85914)Resolving deltas:   1% (860/85914)Resolving deltas:   2% (1719/85914)Resolving deltas:   3% (2578/85914)Resolving deltas:   4% (3437/85914)Resolving deltas:   5% (4296/85914)Resolving deltas:   6% (5155/85914)Resolving deltas:   7% (6014/85914)Resolving deltas:   8% (6874/85914)Resolving deltas:   9% (7733/85914)Resolving deltas:  10% (8592/85914)Resolving deltas:  11% (9451/85914)Resolving deltas:  12% (10310/85914)Resolving deltas:  13% (11169/85914)Resolving deltas:  14% (12028/85914)Resolving deltas:  15% (12888/85914)Resolving deltas:  16% (13747/85914)Resolving deltas:  17% (14606/85914)Resolving deltas:  18% (15465/85914)Resolving deltas:  19% (16324/85914)Resolving deltas:  20% (17183/85914)Resolving deltas:  21% (18042/85914)Resolving deltas:  22% (18902/85914)Resolving deltas:  23% (19761/85914)Resolving deltas:  24% (20620/85914)Resolving deltas:  25% (21479/85914)Resolving deltas:  26% (22338/85914)Resolving deltas:  27% (23197/85914)Resolving deltas:  28% (24056/85914)Resolving deltas:  29% (24916/85914)Resolving deltas:  30% (25775/85914)Resolving deltas:  31% (26634/85914)Resolving deltas:  32% (27493/85914)Resolving deltas:  33% (28352/85914)Resolving deltas:  34% (29211/85914)Resolving deltas:  35% (30070/85914)Resolving deltas:  36% (30930/85914)Resolving deltas:  37% (31789/85914)Resolving deltas:  38% (32648/85914)Resolving deltas:  39% (33507/85914)Resolving deltas:  40% (34366/85914)Resolving deltas:  41% (35225/85914)Resolving deltas:  42% (36084/85914)Resolving deltas:  43% (36944/85914)Resolving deltas:  44% (37803/85914)Resolving deltas:  45% (38662/85914)Resolving deltas:  46% (39521/85914)Resolving deltas:  47% (40380/85914)Resolving deltas:  48% (41239/85914)Resolving deltas:  49% (42098/85914)Resolving deltas:  50% (42957/85914)Resolving deltas:  51% (43817/85914)Resolving deltas:  52% (44676/85914)Resolving deltas:  53% (45535/85914)Resolving deltas:  53% (46216/85914)Resolving deltas:  54% (46394/85914)Resolving deltas:  55% (47253/85914)Resolving deltas:  56% (48112/85914)Resolving deltas:  57% (48971/85914)Resolving deltas:  58% (49831/85914)Resolving deltas:  59% (50690/85914)Resolving deltas:  60% (51549/85914)Resolving deltas:  61% (52408/85914)Resolving deltas:  62% (53267/85914)Resolving deltas:  63% (54126/85914)Resolving deltas:  64% (54985/85914)Resolving deltas:  65% (55845/85914)Resolving deltas:  66% (56704/85914)Resolving deltas:  67% (57563/85914)Resolving deltas:  68% (58422/85914)Resolving deltas:  69% (59281/85914)Resolving deltas:  70% (60140/85914)Resolving deltas:  71% (60999/85914)Resolving deltas:  72% (61859/85914)Resolving deltas:  73% (62718/85914)Resolving deltas:  74% (63577/85914)Resolving deltas:  75% (64436/85914)Resolving deltas:  76% (65295/85914)Resolving deltas:  77% (66154/85914)Resolving deltas:  78% (67013/85914)Resolving deltas:  79% (67873/85914)Resolving deltas:  80% (68732/85914)Resolving deltas:  81% (69591/85914)Resolving deltas:  81% (70275/85914)Resolving deltas:  82% (70450/85914)Resolving deltas:  83% (71309/85914)Resolving deltas:  84% (72168/85914)Resolving deltas:  85% (73027/85914)Resolving deltas:  86% (73887/85914)Resolving deltas:  87% (74746/85914)Resolving deltas:  88% (75605/85914)Resolving deltas:  89% (76464/85914)Resolving deltas:  90% (77323/85914)Resolving deltas:  91% (78182/85914)Resolving deltas:  92% (79041/85914)Resolving deltas:  93% (79901/85914)Resolving deltas:  94% (80760/85914)Resolving deltas:  95% (81619/85914)Resolving deltas:  96% (82478/85914)Resolving deltas:  97% (83337/85914)Resolving deltas:  98% (84196/85914)Resolving deltas:  99% (85055/85914)Resolving deltas: 100% (85914/85914)Resolving deltas: 100% (85914/85914), done.
[?2004h]0;sagnik@TIGER01038: ~/my_project[01;32msagnik@TIGER01038[00m:[01;34m~/my_project[00m$ cd mylibgit
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ echo My [K[K[K"My Project"
[?2004lMy Project
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ echo "My Project" > README
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ ls
[?2004lAUTHORS         README.md     [0m[01;34mcmake[0m     [01;34mfuzzers[0m          [01;34mscript[0m
CMakeLists.txt  SECURITY.md   [01;34mdeps[0m      git.git-authors  [01;34msrc[0m
COPYING         api.docurium  [01;34mdocs[0m      [01;34minclude[0m          [01;34mtests[0m
README          [01;34mci[0m            [01;34mexamples[0m  package.json
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git stt[Katus
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git add [7mREADME[27mREADME
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   README[m

[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ ls
[?2004lAUTHORS         README.md     [0m[01;34mcmake[0m     [01;34mfuzzers[0m          [01;34mscript[0m
CMakeLists.txt  SECURITY.md   [01;34mdeps[0m      git.git-authors  [01;34msrc[0m
COPYING         api.docurium  [01;34mdocs[0m      [01;34minclude[0m          [01;34mtests[0m
README          [01;34mci[0m            [01;34mexamples[0m  package.json
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mnano README.md[27mnano README.md
[?2004l[?2004h[?1049h[22;0;0t[1;34r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[32;30H(B[0;7m[ Reading... ](B[m[32;28H(B[0;7m[ Read 440 lines ](B[m[H(B[0;7m  GNU nano 6.2                    README.md                             [1;71H(B[m[33d(B[0;7m^G(B[m Help[15G(B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut[33;57H(B[0;7m^T(B[m Execute[34d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Paste[57G(B[0;7m^J(B[m Justify[2dlibgit2 - the Git linkable library[3d(B[0;1m[33m==================================[5d[39m(B[m| Build Status | |[6d| ------------ | - |[7d| (B[0;1m[32m**main**[39m(B[m branch CI builds | (B[0;1m[35m[![CI Build][34m(https://github.com/libgit2/l[39m(B[0;7m>[8;1H(B[m| (B[0;1m[32m**v1.6 branch**[39m(B[m CI builds | (B[0;1m[35m[![CI Build][34m(https://github.com/libgit2/l[39m(B[0;7m>[9;1H(B[m| (B[0;1m[32m**v1.5 branch**[39m(B[m CI builds | (B[0;1m[35m[![CI Build][34m(https://github.com/libgit2/l[39m(B[0;7m>[10;1H(B[m| (B[0;1m[32m**Nightly**[39m(B[m builds | (B[0;1m[35m[![Nightly Build][34m(https://github.com/libgit2/lib[39m(B[0;7m>[12;1H(B[0;1m[36m`libgit2`[39m(B[m is a portable, pure C implementation of the Git core methods[13dprovided as a linkable library with a solid API, allowing to build Git[14dfunctionality into your application.  Language bindings like[15d(B[0;1m[35m[Rugged][34m(https://github.com/libgit2/rugged)[39m(B[m (Ruby),[16d(B[0;1m[35m[LibGit2Sharp][34m(https://github.com/libgit2/libgit2sharp)[39m(B[m (.NET),[17d(B[0;1m[35m[pygit2][34m(http://www.pygit2.org/)[39m(B[m (Python) and[18d(B[0;1m[35m[NodeGit][34m(http://nodegit.org)[39m(B[m (Node) allow you to build Git tooling[19din your favorite language.[21d(B[0;1m[36m`libgit2`[39m(B[m is used to power Git GUI clients like[22d(B[0;1m[35m[GitKraken][34m(https://gitkraken.com/)[39m(B[m and (B[0;1m[35m[gmaster][34m(https://gmaster.io/)[23d[39m(B[mand on Git hosting providers like (B[0;1m[35m[GitHub][34m(https://github.com/)[39m(B[m,[24d(B[0;1m[35m[GitLab][34m(https://gitlab.com/)[39m(B[m and[25d(B[0;1m[35m[Azure DevOps][34m(https://azure.com/devops)[39m(B[m.[26dWe perform the merge every time you click "merge pull request".[28d(B[0;1m[36m`libgit2`[39m(B[m is licensed under a (B[0;1m[32m**very permissive license**[39m(B[m (GPLv2 with a(B[0;7m>[29;1H(B[mLinking Exception). This means that you can link against the library wi(B[0;7m>[30;1H(B[mkind of software without making that software fall under the GPL.[31dChanges to libgit2 would still be covered under its GPL license.[2d[?12l[?25h[?25l[1;45H(B[0;7m*[71G(B[m[?12l[?25h[2dHlibgit2 - the Git linkable libraryH[?25l[?12l[?25helibgit2 - the Git linkable libraryHe[?25l[?12l[?25hllibgit2 - the Git linkable libraryHel[?25l[?12l[?25hlllibgit2 - the Git linkable library[5G[?25l[?12l[?25holibgit2 - the Git linkable library[6G[?25l[33;15H    (B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append  [55G(B[0;7mM-B(B[m Backup File[34;2H(B[0;7mC(B[m Cancel         (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend       (B[0;7m^T(B[m Browse[K[32d(B[0;7mFile Name to Write: README.md                                           [32;30H(B[m[?12l[?25h[?25l[1K (B[0;7m[ Writing... ](B[m[K[1;45H(B[0;7m [71G(B[m[32;27H(B[0;7m[ Wrote 440 lines ](B[m[33;15H(B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut[55G  (B[0;7m^T(B[m Execute[K[34;2H(B[0;7mX(B[m Exit       (B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Paste      (B[0;7m^J(B[m Justify[?12l[?25h[2;6H[?25l[32d[J[34d[?12l[?25h[34;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   README[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   README.md[m

[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git add [7mREADME.md[27mREADME.md
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   README[m
	[32mmodified:   README.md[m

[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ gt[Kt[Kit commit -m "My first commit" [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K"
[?2004l[main 3ea14a47b] My first commit
 2 files changed, 2 insertions(+), 1 deletion(-)
 create mode 100644 README
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git diff
[?2004l[?1h=[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ nanogit diffcommit -m "My first commit" [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cstatus[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cadd README.md[7Pstatusnano README.md
[?2004l[?2004h[?1049h[22;0;0t[1;34r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[32;30H(B[0;7m[ Reading... ](B[m[32;28H(B[0;7m[ Read 440 lines ](B[m[H(B[0;7m  GNU nano 6.2                    README.md                             [1;71H(B[m[33d(B[0;7m^G(B[m Help[15G(B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut[33;57H(B[0;7m^T(B[m Execute[34d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Paste[57G(B[0;7m^J(B[m Justify[2dHellolibgit2 - the Git linkable library[3d(B[0;1m[33m==================================[5d[39m(B[m| Build Status | |[6d| ------------ | - |[7d| (B[0;1m[32m**main**[39m(B[m branch CI builds | (B[0;1m[35m[![CI Build][34m(https://github.com/libgit2/l[39m(B[0;7m>[8;1H(B[m| (B[0;1m[32m**v1.6 branch**[39m(B[m CI builds | (B[0;1m[35m[![CI Build][34m(https://github.com/libgit2/l[39m(B[0;7m>[9;1H(B[m| (B[0;1m[32m**v1.5 branch**[39m(B[m CI builds | (B[0;1m[35m[![CI Build][34m(https://github.com/libgit2/l[39m(B[0;7m>[10;1H(B[m| (B[0;1m[32m**Nightly**[39m(B[m builds | (B[0;1m[35m[![Nightly Build][34m(https://github.com/libgit2/lib[39m(B[0;7m>[12;1H(B[0;1m[36m`libgit2`[39m(B[m is a portable, pure C implementation of the Git core methods[13dprovided as a linkable library with a solid API, allowing to build Git[14dfunctionality into your application.  Language bindings like[15d(B[0;1m[35m[Rugged][34m(https://github.com/libgit2/rugged)[39m(B[m (Ruby),[16d(B[0;1m[35m[LibGit2Sharp][34m(https://github.com/libgit2/libgit2sharp)[39m(B[m (.NET),[17d(B[0;1m[35m[pygit2][34m(http://www.pygit2.org/)[39m(B[m (Python) and[18d(B[0;1m[35m[NodeGit][34m(http://nodegit.org)[39m(B[m (Node) allow you to build Git tooling[19din your favorite language.[21d(B[0;1m[36m`libgit2`[39m(B[m is used to power Git GUI clients like[22d(B[0;1m[35m[GitKraken][34m(https://gitkraken.com/)[39m(B[m and (B[0;1m[35m[gmaster][34m(https://gmaster.io/)[23d[39m(B[mand on Git hosting providers like (B[0;1m[35m[GitHub][34m(https://github.com/)[39m(B[m,[24d(B[0;1m[35m[GitLab][34m(https://gitlab.com/)[39m(B[m and[25d(B[0;1m[35m[Azure DevOps][34m(https://azure.com/devops)[39m(B[m.[26dWe perform the merge every time you click "merge pull request".[28d(B[0;1m[36m`libgit2`[39m(B[m is licensed under a (B[0;1m[32m**very permissive license**[39m(B[m (GPLv2 with a(B[0;7m>[29;1H(B[mLinking Exception). This means that you can link against the library wi(B[0;7m>[30;1H(B[mkind of software without making that software fall under the GPL.[31dChanges to libgit2 would still be covered under its GPL license.[2d[?12l[?25h[?25l[?12l[?25hH[?25l[?12l[?25he[?25l[?12l[?25hl[?25l[?12l[?25hl[?25l[?12l[?25ho[?25l[1;45H(B[0;7m*[71G(B[m7[2;31r8[2dM[1;34r[2;1HHello[3d[5P[?12l[?25h[?25l[?12l[?25h[2;6H[?25l[?12l[?25h [?25l[?12l[?25hw[?25l[?12l[?25ho[?25l[?12l[?25hr[?25l[?12l[?25hl[?25l[?12l[?25hd[?25l[?12l[?25h~[?25l[?12l[?25h![?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h![?25l[33;15H    (B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append  [55G(B[0;7mM-B(B[m Backup File[34;2H(B[0;7mC(B[m Cancel         (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend       (B[0;7m^T(B[m Browse[K[32d(B[0;7mFile Name to Write: README.md                                           [32;30H(B[m[?12l[?25h[?25l[1K (B[0;7m[ Writing... ](B[m[K[1;45H(B[0;7m [71G(B[m[32;27H(B[0;7m[ Wrote 441 lines ](B[m[33;15H(B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut[55G  (B[0;7m^T(B[m Execute[K[34;2H(B[0;7mX(B[m Exit       (B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Paste      (B[0;7m^J(B[m Justify[?12l[?25h[2;13H[?25l[32d[J[34d[?12l[?25h[34;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   README.md[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git statusnano README.md[6Pgit diffnano README.md[4Pgit statusnano README.md[6Pgit diffcommit -m "My first commit" [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cstatus[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cadd README.md
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git add README.md[7Pstatusnano README.md[4Pgit statusadd README.md[7Pstatusnano README.md[6Pgit diff
[?2004l[?1h=[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git diffadd README.md[7Pstatusnano README.md[6Pgit diffcommit -m "My first commit" [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cstatus[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccommit -m "My first commit" [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P commit"
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P commit"[1P commit"[1P commit"[1P commit"s commit"e commit"c commit"o commit"n commit" [A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf commit"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C commit" [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd commit"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004l[main 613a72117] My second commit
 1 file changed, 2 insertions(+), 1 deletion(-)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git commit -m "My second commit"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[Cdiff[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1h=[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit diff --staged[27mgit diff --staged
[?2004l[?1h=[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit diff --cached[27mgit diff --cached
[?2004l[?1h=[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mecho "#skipping staging area" >[27m[7m>[27m[7m README.md[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ echo "#skipping staging area" >> README.md
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit status[27mgit status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   README.md[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git statusecho "#skipping staging area" >> README.md[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [14Pgit diff --cached
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pstatusdiff --staged[Kcommit -m "My second commit"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[Cdiff[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cadd README.md
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git add README.md[7Pstatusecho "#skipping staging area" >> README.md[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [14Pgit diff --cached
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1h=[1mdiff --git a/README.md b/README.md[m[m
[1mindex a195f3904..566513425 100644[m[m
[1m--- a/README.md[m[m
[1m+++ b/README.md[m[m
[36m@@ -439,3 +439,4 @@[m [mgratis.  However, if you modify libgit2 itself, you [m [36m[m[mmust distribute the[m[m
 source to your modified version of libgit2.[m[m
 [m[m
 See the [COPYING file](COPYING) for the full license text.[m[m
[32m+[m[32m#skipping staging area[m[m
[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit commit -a -m "3rd commit sk[27m[7mi[27m[7mpping staging[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git commit -a -m "3rd commit skipping staging area"
[?2004l[main fa0a13be8] 3rd commit skipping staging area
 1 file changed, 1 insertion(+)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit rm --cached README[27m
[7mrm 'README'[27m
[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit rm --cached README
rm 'README'
[A
[?2004lrm 'README'
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ ls
[?2004lAUTHORS         README.md     [0m[01;34mci[0m     [01;34mdocs[0m      git.git-authors  [01;34mscript[0m
CMakeLists.txt  SECURITY.md   [01;34mcmake[0m  [01;34mexamples[0m  [01;34minclude[0m          [01;34msrc[0m
COPYING         api.docurium  [01;34mdeps[0m   [01;34mfuzzers[0m   package.json     [01;34mtests[0m
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit commit -m "d[KDeleting 2 fi[27m[7ml[27m[7mes"[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git commit -m "d[KDeleting 2 files"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\Deleting 2 files"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\Deleting 2 files"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CDeleting 2 fi[1Ples"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CDeleting 2 fil[1Pes"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CDeleting 2 file[1Ps"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CDeleting 2 files[1P"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CDeleting 2 files"[K[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004l[main 68b4bdf5a] Deleting 2 files
 1 file changed, 1 deletion(-)
 delete mode 100644 README
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git commit -m "Deleting 2 files"[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ ls[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Crm 'README'ls[K
[?2004lAUTHORS         README.md     [0m[01;34mci[0m     [01;34mdocs[0m      git.git-authors  [01;34mscript[0m
CMakeLists.txt  SECURITY.md   [01;34mcmake[0m  [01;34mexamples[0m  [01;34minclude[0m          [01;34msrc[0m
COPYING         api.docurium  [01;34mdeps[0m   [01;34mfuzzers[0m   package.json     [01;34mtests[0m
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git t[Kstatus
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 4 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit mv README[27mgit mv README
[?2004lusage: git mv [<options>] <source>... <destination>

    -v, --verbose         be verbose
    -n, --dry-run         dry run
    -f, --force           force move/rename even if target exists
    -k                    skip move/rename errors
    --sparse              allow updating entries outside of the sparse-checkout cone

[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git log
[?2004l[?1h=[33mcommit 68b4bdf5a04917f9af3936312efe6a56abc9b3fe[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:49:29 2023 +0530[m
[m
    Deleting 2 files[m
[m
[33mcommit fa0a13be8a0a53a78033e972ddbf54bf487b6656[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:48:20 2023 +0530[m
[m
    3rd commit skipping staging area[m
[m
[33mcommit 613a7211761592e3fe4f7ebe959daf6bf257ea94[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:45:36 2023 +0530[m
[m
    My second commit[m
[m
[33mcommit 3ea14a47b814a7a440db2d4d9407f20f9312bf24[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:44:10 2023 +0530[m
[m
    My first commit[m
[m
[33mcommit 8f8e805e3f37e49563c33a0c67fcf7f0d2e9101c[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEA[m [33m[m[33m[m[1;31m[m[33m[m[1;31mD[m[33m)[m[m
Merge: d066d0d95 cbc5c6adf[m
Author: Edward Thomson <ethomson@edwardthomson.com>[m
Date:   Sat Mar 11 05:57:19 2023 -0800[m
[m
    Merge pull request #6529 from libgit2/ethomson/include_sanity[m
    [m
    cmake: don't include `include/git2`[m
:[K[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit-progit[27mgit-progit
[?2004lgit-progit: command not found
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit clone  https://github.com/s[27m[7mc[27m[7mhacon/simplegit-progit[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git clone  https://github.com/schacon/simplegit-progit
[?2004lCloning into 'simplegit-progit'...
remote: Enumerating objects: 13, done.[K
remote: Total 13 (delta 0), reused 0 (delta 0), pack-reused 13[K
Receiving objects:   7% (1/13)Receiving objects:  15% (2/13)Receiving objects:  23% (3/13)Receiving objects:  30% (4/13)Receiving objects:  38% (5/13)Receiving objects:  46% (6/13)Receiving objects:  53% (7/13)Receiving objects:  61% (8/13)Receiving objects:  69% (9/13)Receiving objects:  76% (10/13)Receiving objects:  84% (11/13)Receiving objects:  92% (12/13)Receiving objects: 100% (13/13)Receiving objects: 100% (13/13), done.
Resolving deltas:   0% (0/3)Resolving deltas:  33% (1/3)Resolving deltas:  66% (2/3)Resolving deltas: 100% (3/3)Resolving deltas: 100% (3/3), done.
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit log[27mgit log
[?2004l[?1h=[33mcommit 68b4bdf5a04917f9af3936312efe6a56abc9b3fe[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:49:29 2023 +0530[m
[m
    Deleting 2 files[m
[m
[33mcommit fa0a13be8a0a53a78033e972ddbf54bf487b6656[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:48:20 2023 +0530[m
[m
    3rd commit skipping staging area[m
[m
[33mcommit 613a7211761592e3fe4f7ebe959daf6bf257ea94[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:45:36 2023 +0530[m
[m
    My second commit[m
[m
[33mcommit 3ea14a47b814a7a440db2d4d9407f20f9312bf24[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:44:10 2023 +0530[m
[m
    My first commit[m
[m
[33mcommit 8f8e805e3f37e49563c33a0c67fcf7f0d2e9101c[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEA[m [33m[m[33m[m[1;31m[m[33m[m[1;31mD[m[33m)[m[m
Merge: d066d0d95 cbc5c6adf[m
Author: Edward Thomson <ethomson@edwardthomson.com>[m
Date:   Sat Mar 11 05:57:19 2023 -0800[m
[m
    Merge pull request #6529 from libgit2/ethomson/include_sanity[m
    [m
    cmake: don't include `include/git2`[m
:[K[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit log --pretty=oneline[27mgit log --pretty=oneline
[?2004l[?1h=[33m68b4bdf5a04917f9af3936312efe6a56abc9b3fe[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m Deleting 2 files[m
[33mfa0a13be8a0a53a78033e972ddbf54bf487b6656[m 3rd commit skipping staging are[m [33m[ma[m
[33m613a7211761592e3fe4f7ebe959daf6bf257ea94[m My second commit[m
[33m3ea14a47b814a7a440db2d4d9407f20f9312bf24[m My first commit[m
[33m8f8e805e3f37e49563c33a0c67fcf7f0d2e9101c[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m Merg[m [33m[m[33m[m[1;31m[m[33m[m[1;31m[m[33m[me pull request #6529 from libgit2/ethomson/include_sanity[m
[33mcbc5c6adfa8e0988b323d226c0439fe74e94bed6[m cmake: don't include `include/g[m [33m[mit2`[m
[33md066d0d95c43e97df6624292f3f527f9372ca8fe[m Merge pull request #6527 from B[m [33m[matchyx/batchyx/wchar-fixes[m
[33m20811c5aa9c528405eaa3f88ff22a9adebafa9e6[m sysdir: Do not declare win32 fu[m [33m[mnctions on non-win32 platforms[m
[33m8164b4816230711f1aeb8e474011f496f3bfdb98[m Merge pull request #6521 from l[m [33m[mibgit2/ethomson/weird_ignore[m
[33m129cadf9bf9ef1b43dd844d54f2b57a52b69ed2a[m index: support `git_index_add_a[m [33m[mll` directories with force[m
[33m309befe413d7ab68e8e410d8121af98467620792[m index: test `git_index_add_all`[m [33m[m with force[m
[33m6fb5ab372366a92ae36aac36e1427158c22f3278[m index: test `git_index_add_all`[m [33m[m with ignored folder[m
[33maf12fc11c520b58fe548a5ff736812462c269685[m Merge pull request #6520 from l[m [33m[mibgit2/ethomson/git_odb_open[m
[33m7445d510bec7885de4355c65dcf59c3b49f0859a[m Merge pull request #6513 from l[m [33m[mibgit2/ethomson/util_test_root[m
[33mc59d519c49e7b0e4ac35215829adf3af71033bd2[m Merge pull request #6518 from g[m [33m[meorgthegreat/patch-1[m
[33me1e0d77c6f1573ab1e332af3f4c7490059d78e3c[m odb: restore `git_odb_open`[m
[33m3770bf6766ade2eae8a7771dde8248322e68f879[m Remove unused wditer variable[m
[33m25ec37379ed07b10c4ecc6143cf6018cabc8f857[m[33m ([m[1;33mtag: v1.6.2[m[33m, [m[1;31morigin/maint/v1.6[m[33m[m [33m[m[33m[m[1;33m[m[33m[m[1;31m[m[33m)[m v1.6.2: update changelog[m
[33m9d1a3ef7c722d38c8d007627b3ae830c2e658929[m v1.6.2: update version numbers[m
[33mda82fb5471f0b8cf098a4711b086c08a92f5357f[m Merge pull request #6514 from l[m :[K[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit log --since=2.weeks[27mgit log --since=2.weeks
[?2004l[?1h=[33mcommit 68b4bdf5a04917f9af3936312efe6a56abc9b3fe[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:49:29 2023 +0530[m
[m
    Deleting 2 files[m
[m
[33mcommit fa0a13be8a0a53a78033e972ddbf54bf487b6656[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:48:20 2023 +0530[m
[m
    3rd commit skipping staging area[m
[m
[33mcommit 613a7211761592e3fe4f7ebe959daf6bf257ea94[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:45:36 2023 +0530[m
[m
    My second commit[m
[m
[33mcommit 3ea14a47b814a7a440db2d4d9407f20f9312bf24[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:44:10 2023 +0530[m
[m
    My first commit[m
[m
[33mcommit 8f8e805e3f37e49563c33a0c67fcf7f0d2e9101c[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEA[m [33m[m[33m[m[1;31m[m[33m[m[1;31mD[m[33m)[m[m
Merge: d066d0d95 cbc5c6adf[m
Author: Edward Thomson <ethomson@edwardthomson.com>[m
Date:   Sat Mar 11 05:57:19 2023 -0800[m
[m
    Merge pull request #6529 from libgit2/ethomson/include_sanity[m
    [m
    cmake: don't include `include/git2`[m
:[K[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mecho "learning git amm[Kenf [K[[27m[7mK[27m[7md" >> E\[K[KREADME[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ echo "learning git amm[Kenf [K[Kd" >> E\[K[KREADME[C[1PREADME[1PREADME[1PREADME[1PREADME[1PREADME[1PREADME[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd"[1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" [1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" >[C[1P README[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" >>[1P README[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" >> [1PREADME[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" >> R[1PEADME[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" >> RE[1PADME[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" >> REA[1PDME[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" >> READ[1PME[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" >> READM[1PE[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccamd" >> README[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Coamd" >> README[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmamd" >> README[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmamd" >> README[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd" >> RE[1PADME[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnd" >> README[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs" >> README[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 4 commits.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m
	[31msimplegit-progit/[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ history
[?2004l    1  script -a ~/my_unix_session
    2  conda --version
    3  sudo apt get install git
    4  ls
    5  pwd
    6  ls -F
    7  ls --help
    8  man ls
    9  exit
   10  ls
   11  cd ..
   12  script -a ~/my_unix_session
   13  pwd
   14  ls
   15  ls -F
   16  ls --help
   17  ls -a
   18  ls -A
   19  ls --author
   20  ls -l --author
   21  ls -A --author
   22  cd ..
   23  ls -a
   24  ls --author
   25  ls -l --author
   26  ls -lh
   27  ls -l --author
   28  ls -rt
   29  ls -lrt
   30  ls -F
   31  pwd
   32  cd home
   33  man ls
   34  mkdir project
   35  mkdir "$HOME/bin"
   36  ls
   37  cd ..
   38  ls
   39  cd home
   40  cd sagnik
   41  mkdir project
   42  ls
   43  cd project
   44  ls -F
   45  text_file.txt
   46  nano draft.txt
   47  ls
   48  touch my_file.txt
   49  ls -l
   50  rm my_file.txt
   51  ls
   52  cd ~/Desktop/shell-lesson-data/exercise-data/writing
   53  mv thesis/draft.txt thesis/quotes.txt
   54  ls
   55  mv draft.txt quotes.txt
   56  ls
   57  pwd
   58  cd ..
   59  mkdir thesis
   60  ls
   61  cp project/quotes.txt thesis/quotations.txt
   62  cd thesis
   63  ls
   64  pwd
   65  rm -i
   66  cp quotations.txt backup.txt
   67  ls
   68  rm -i backup.txt
   69  ls
   70  cp quotations.txt backup1.txt backup2.txt
   71  ls
   72  ls qu*.txt
   73  ls qo*.txt
   74  *
   75  .
   76  cd ..
   77  ls
   78  cd project
   79  ls
   80  wc quotes.pdb
   81  wc quotes.txt
   82  wc *.txt
   83  exit
   84  ls
   85  cd ..
   86  script -a ~/unix_session
   87  cd /mnt/c/Users/sagnik.ganguly/Desktop/shell-lesson-data
   88  cd exercise-data/writing
   89  cat haiku.txt
   90  grep not haiku.txt
   91  grep The haiku.txt
   92  grep -w The haiku.txt
   93  grep -w "is not" haiku.txt
   94  grep -n "it" haiku.txt
   95  grep -n -w -i "the" haiku.txt
   96  grep -n -w -v "the" haiku.txt
   97  grep -r Yesterday .
   98  grep --help
   99  grep -w "of" haiku.txt
  100  grep -E "^.o" haiku.txt
  101  2012-11-05,22
  102  1.txt
  103  grep -w $1 -r $2
  104  grep -w $1 -r $2 | cut -d : -f 2 | cut -d , -f 1,3 > $1.txt
  105  grep -w $1 -r $2
  106  ls
  107  for sis in Jo Meg Beth Amy; do     echo $sis:;     grep -ow $sis LittleWomen.txt | wc -l; done
  108  shell-lesson-data/exercise-data
  109  exercise-data
  110  find .
  111  cd ..
  112  find .
  113  find . -type d
  114  find . -type f
  115  wc -l $(find . -name "*.txt")
  116  wc -l ./writing/LittleWomen.txt ./writing/haiku.txt ./numbers.txt
  117  grep "searching" $(find . -name "*.txt")
  118  wc -l $(find . -name "*.dat") | sort -n
  119  ls
  120  cd proteins
  121  ls
  122  wc cubane.pdb
  123  wc *.pdb
  124  wc -l *.pdb > lengths.txt
  125  ls lengths.txt
  126  cat lengths.txt
  127  sort -n lengths.txt
  128  sort -n lengths.txt > lengths.txt
  129  echo The echo command prints text
  130  echo hello > testfile01.txt
  131  head -n 3 animals.csv > animals-subset.csv
  132  cd ..
  133  cd animal-counts
  134  head -n 3 animals.csv > animals-subset.csv
  135  ls
  136  tail -n 2 animals.csv >> animals-subset.csv
  137  sort -n lengths.txt | head -n 1
  138  cd ..
  139  cd proteins
  140  sort -n lengths.txt | head -n 1
  141  wc -l * | sort -n | head -n 1-3
  142  history
  143  cd ..
  144  cd molecules
  145  find .
  146  cd animal-count
  147  cd animal-counts
  148  cat animals.csv | head -n 5 | tail -n 3 | sort -r > final.txt
  149  cut -d , -f 2 animals.csv
  150  sort animals.csv | uniq -c
  151  cut -d, -f 2 animals.csv | sort | uniq -c
  152  cut -d, -f 2 animals.csv | sort | uniq -c | wc -l
  153  cd north-pacific-gyre
  154  cd ..
  155  find.
  156  find .
  157  cd ..
  158  find .
  159  cd north-pacific-gyre
  160  wc -l *.txt
  161  wc -l *.txt | sort -n | head -n 5
  162  wc -l *.txt | sort -n | tail -n 5
  163  ls *Z.txt
  164  cd ..
  165  cd exercise-data/creatures
  166  head -n 5 basilisk.dat minotaur.dat unicorn.dat
  167  for thing in list_of_things; do     operation_using $thing; done
  168  for filename in basilisk.dat minotaur.dat unicorn.dat; > do
  169  >     echo $filename
  170  >     head -n 2 $filename | tail -n 1
  171  > done
  172  for filename in basilisk.dat minotaur.dat unicorn.dat; do     echo $filename;     head -n 2 $filename | tail -n 1; done
  173  do
  174  for filename in basilisk.dat minotaur.dat unicorn.dat; do echo $filename; head -n 2 $filename | tail -n 1; done
  175  for temperature in basilisk.dat minotaur.dat unicorn.dat; do head -n 2 $temperature | tail -n 1; done
  176  for loop_variable in 0 1 2 3 4 5 6 7 8 9; do echo $loop_variable; done
  177  cd ..
  178  cd proteins
  179  for datafile in *.pdb; do ls *.pdb; done
  180  for alkanes in *.pdb; do echo $alkanes; cat $alkanes > alkanes.pdb; done
  181  echo hello there
  182  for filename in *.dat; do $filename; head -n 100 $filename | tail -n 20; done
  183  for filename in "red dragon.dat" "purple unicorn.dat"; do head -n 100 "$filename" | tail -n 20; done
  184  cp basilisk.dat original-basilisk.dat
  185  history
  186  cd ..
  187  ls
  188  cd ..
  189  ls
  190  cd north-pacific-gyre
  191  for datafile in NENE*A.txt NENE*B.txt; do   echo $datafile; done
  192  for datafile in NENE*A.txt NENE*B.txt; do echo $datafile stats-$datafile; done
  193  history | tail -n 5
  194  for species in cubane ethane methane; do for temperature in 25 30 37 40; do mkdir $species-$temperature; done; done
  195  cd ..
  196  ls
  197  cd exercise-data
  198  cd proteins
  199  nano middle.sh
  200  bash middle.sh
  201  nano middle.sh
  202  bash middle.sh octane.pdb
  203  bash middle.sh pentane.pdb
  204  nano middle.sh
  205  bash middle.sh pentane.pdb 15 5
  206  bash middle.sh pentane.pdb 20 5
  207  wc -l *.pdb | sort -n
  208  nano sorted.sh
  209  bash sorted.sh *.pdb ../creatures/*.dat
  210  history | tail -n 5 > redo-figure-3.sh
  211  history | tail -n 5 > recent.sh
  212  cd ../../north-pacific-gyre/
  213  nano do-stats.sh
  214  bash do-stats.sh NENE*A.txt NENE*B.txt
  215  cd ..
  216  ls
  217  cd exercise-data
  218  cd proteins
  219  bash longest.sh shell-lesson-data/exercise-data/proteins pdb
  220  wc -l $1/*.$2 | sort -n | tail -n 2 | head -n 1
  221  echo *.*
  222  echo $@.pdb
  223  for filename in $1 $2 $3; do     cat $filename; done
  224  cd ..
  225  ls
  226  cd north-pacific-gyre
  227  cd scripts
  228  ls
  229  for datafile in "$@"; do     echo $datfile;     bash goostats.sh $datafile stats-$datafile; done
  230  bash do-errors.sh NENE*A.txt NENE*B.txt
  231  bash -x do-errors.sh NENE*A.txt NENE*B.txt
  232  bash -x do-stats.sh NENE*A.txt NENE*B.txt
  233  exit
  234  ls
  235  cd shell-lesson-data
  236  cd
  237  cd Desktop/shell-lesson-data/exercise-data/writing
  238  cd Desktop/shell-lesson-data/exercise-data
  239  script -a ~/my_unix_session
  240  git --system config
  241  git help
  242  ls - all
  243  ls -all
  244  git config --system
  245  git config --show-origin
  246  git config --global user.name "sagnik-startv"
  247  git config --list
  248  git config user.name sagnik-startv
  249  git config user.name
  250  git config user.name init.defaultBranch
  251  git config --global init.defaultBranch main master
  252  git config --list
  253  git config --global user.email "sagnik.ganguly@tigeranalytics.com"
  254  git config --list
  255  ls -all
  256  git config --show-origin
  257  git add help config
  258  git add help
  259  git add -h
  260  mkdir my_project
  261  cd my_project
  262  git init
  263  ls
  264  ls -all
  265  info ls
  266  ls --help
  267  git clone https://github.com/libgit2/libgit2 mylibgit
  268  cd mylibgit
  269  git status
  270  echo "My Project"
  271  echo "My Project" > README
  272  git status
  273  ls
  274  git status
  275  git add README
  276  git status
  277  ls
  278  nano README.md
  279  git status
  280  git add README.md
  281  git status
  282  git commit -m "My first commit"
  283  git diff
  284  nano README.md
  285  git status
  286  git add README.md
  287  git diff
  288  git commit -m "My second commit"
  289  git diff
  290  git diff --staged
  291  git status
  292  git diff --cached
  293  echo "#skipping staging area" >> README.md
  294  git status
  295  git add README.md
  296  git diff --cached
  297  git commit -a -m "3rd commit skipping staging area"
  298  git rm --cached README
  299  rm 'README'
  300  ls
  301  git commit -m "Deleting 2 files"
  302  ls
  303  git status
  304  git mv README
  305  git log
  306  git-progit
  307  git clone  https://github.com/schacon/simplegit-progit
  308  git log
  309  git log --pretty=oneline
  310  git log --since=2.weeks
  311  echo "learning git commands" >> README
  312  git status
  313  history
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit remote add pb https://githu[27m[7mb[27m[7m.com/paulboone/ticgit[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git remote add pb https://github.com/paulboone/ticgit
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git remove -v
[?2004lgit: 'remove' is not a git command. See 'git --help'.

The most similar command is
	remote
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ 
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git remove -v[1P[1@t
[?2004lorigin	https://github.com/libgit2/libgit2 (fetch)
origin	https://github.com/libgit2/libgit2 (push)
pb	https://github.com/paulboone/ticgit (fetch)
pb	https://github.com/paulboone/ticgit (push)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git fetch ls
[?2004lfatal: 'ls' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git fetch ls[K[K[K
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git fetch pb
[?2004lgit remote add pb https://github.com/paulboone/ticgit                                                     remote: Enumerating objects: 634, done.[K
Receiving objects:   0% (1/634)Receiving objects:   1% (7/634)Receiving objects:   2% (13/634)Receiving objects:   3% (20/634)Receiving objects:   4% (26/634)Receiving objects:   5% (32/634)Receiving objects:   6% (39/634)Receiving objects:   7% (45/634)Receiving objects:   8% (51/634)Receiving objects:   9% (58/634)Receiving objects:  10% (64/634)Receiving objects:  11% (70/634)Receiving objects:  12% (77/634)Receiving objects:  13% (83/634)Receiving objects:  14% (89/634)Receiving objects:  15% (96/634)Receiving objects:  16% (102/634)Receiving objects:  17% (108/634)Receiving objects:  18% (115/634)Receiving objects:  19% (121/634)Receiving objects:  20% (127/634)Receiving objects:  21% (134/634)Receiving objects:  22% (140/634)Receiving objects:  23% (146/634)Receiving objects:  24% (153/634)Receiving objects:  25% (159/634)Receiving objects:  26% (165/634)Receiving objects:  27% (172/634)Receiving objects:  28% (178/634)Receiving objects:  29% (184/634)Receiving objects:  30% (191/634)Receiving objects:  31% (197/634)Receiving objects:  32% (203/634)Receiving objects:  33% (210/634)Receiving objects:  34% (216/634)Receiving objects:  35% (222/634)Receiving objects:  36% (229/634)Receiving objects:  37% (235/634)Receiving objects:  38% (241/634)Receiving objects:  39% (248/634)Receiving objects:  40% (254/634)Receiving objects:  41% (260/634)Receiving objects:  42% (267/634)Receiving objects:  43% (273/634)Receiving objects:  44% (279/634)Receiving objects:  45% (286/634)Receiving objects:  46% (292/634)Receiving objects:  47% (298/634)Receiving objects:  48% (305/634)Receiving objects:  49% (311/634)Receiving objects:  50% (317/634)Receiving objects:  51% (324/634)Receiving objects:  52% (330/634)Receiving objects:  52% (330/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  53% (337/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  54% (343/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  55% (349/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  56% (356/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  57% (362/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  58% (368/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  59% (375/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  60% (381/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  61% (387/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  62% (394/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  63% (400/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  64% (406/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  65% (413/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  66% (419/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  67% (425/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  68% (432/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  69% (438/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  70% (444/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  71% (451/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  72% (457/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  73% (463/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  74% (470/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  75% (476/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  76% (482/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  77% (489/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  78% (495/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  79% (501/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  80% (508/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  81% (514/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  82% (520/634), 60.00 KiB | 48.00 KiB/sReceiving objects:  83% (527/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  84% (533/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  85% (539/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  86% (546/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  87% (552/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  88% (558/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  89% (565/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  90% (571/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  91% (577/634), 76.00 KiB | 42.00 KiB/sremote: Total 634 (delta 0), reused 0 (delta 0), pack-reused 634[K
Receiving objects:  92% (584/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  93% (590/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  94% (596/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  95% (603/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  96% (609/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  97% (615/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  98% (622/634), 76.00 KiB | 42.00 KiB/sReceiving objects:  99% (628/634), 76.00 KiB | 42.00 KiB/sReceiving objects: 100% (634/634), 76.00 KiB | 42.00 KiB/sReceiving objects: 100% (634/634), 88.93 KiB | 50.00 KiB/s, done.
Resolving deltas:   0% (0/261)Resolving deltas:   1% (3/261)Resolving deltas:   2% (6/261)Resolving deltas:   3% (8/261)Resolving deltas:   4% (11/261)Resolving deltas:   5% (14/261)Resolving deltas:   6% (16/261)Resolving deltas:   7% (19/261)Resolving deltas:   8% (21/261)Resolving deltas:   9% (24/261)Resolving deltas:  10% (27/261)Resolving deltas:  11% (29/261)Resolving deltas:  12% (32/261)Resolving deltas:  13% (34/261)Resolving deltas:  14% (37/261)Resolving deltas:  15% (40/261)Resolving deltas:  16% (42/261)Resolving deltas:  17% (45/261)Resolving deltas:  18% (47/261)Resolving deltas:  19% (50/261)Resolving deltas:  20% (53/261)Resolving deltas:  21% (55/261)Resolving deltas:  22% (58/261)Resolving deltas:  23% (61/261)Resolving deltas:  24% (63/261)Resolving deltas:  25% (66/261)Resolving deltas:  26% (69/261)Resolving deltas:  27% (71/261)Resolving deltas:  28% (74/261)Resolving deltas:  29% (76/261)Resolving deltas:  30% (79/261)Resolving deltas:  31% (81/261)Resolving deltas:  32% (84/261)Resolving deltas:  33% (88/261)Resolving deltas:  34% (89/261)Resolving deltas:  35% (92/261)Resolving deltas:  36% (94/261)Resolving deltas:  37% (97/261)Resolving deltas:  38% (100/261)Resolving deltas:  39% (102/261)Resolving deltas:  40% (105/261)Resolving deltas:  41% (108/261)Resolving deltas:  42% (110/261)Resolving deltas:  43% (113/261)Resolving deltas:  44% (115/261)Resolving deltas:  45% (118/261)Resolving deltas:  46% (121/261)Resolving deltas:  47% (123/261)Resolving deltas:  48% (126/261)Resolving deltas:  49% (128/261)Resolving deltas:  50% (131/261)Resolving deltas:  51% (134/261)Resolving deltas:  52% (136/261)Resolving deltas:  53% (139/261)Resolving deltas:  54% (141/261)Resolving deltas:  55% (144/261)Resolving deltas:  56% (147/261)Resolving deltas:  57% (149/261)Resolving deltas:  58% (152/261)Resolving deltas:  59% (155/261)Resolving deltas:  60% (157/261)Resolving deltas:  61% (160/261)Resolving deltas:  62% (162/261)Resolving deltas:  63% (165/261)Resolving deltas:  64% (168/261)Resolving deltas:  65% (170/261)Resolving deltas:  66% (173/261)Resolving deltas:  67% (175/261)Resolving deltas:  68% (179/261)Resolving deltas:  69% (181/261)Resolving deltas:  70% (183/261)Resolving deltas:  71% (187/261)Resolving deltas:  72% (188/261)Resolving deltas:  73% (191/261)Resolving deltas:  74% (194/261)Resolving deltas:  75% (196/261)Resolving deltas:  76% (199/261)Resolving deltas:  77% (201/261)Resolving deltas:  78% (204/261)Resolving deltas:  79% (207/261)Resolving deltas:  80% (209/261)Resolving deltas:  81% (212/261)Resolving deltas:  82% (215/261)Resolving deltas:  83% (217/261)Resolving deltas:  84% (220/261)Resolving deltas:  85% (222/261)Resolving deltas:  86% (225/261)Resolving deltas:  87% (228/261)Resolving deltas:  88% (230/261)Resolving deltas:  89% (233/261)Resolving deltas:  90% (235/261)Resolving deltas:  91% (238/261)Resolving deltas:  92% (241/261)Resolving deltas:  93% (243/261)Resolving deltas:  94% (246/261)Resolving deltas:  95% (248/261)Resolving deltas:  96% (251/261)Resolving deltas:  97% (255/261)Resolving deltas:  98% (256/261)Resolving deltas:  99% (259/261)Resolving deltas: 100% (261/261)Resolving deltas: 100% (261/261), done.
From https://github.com/paulboone/ticgit
 * [new branch]          master     -> pb/master
 * [new branch]          ticgit     -> pb/ticgit
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ ls
[?2004lAUTHORS         SECURITY.md   [0m[01;34mdocs[0m             package.json
CMakeLists.txt  api.docurium  [01;34mexamples[0m         [01;34mscript[0m
COPYING         [01;34mci[0m            [01;34mfuzzers[0m          [01;34msimplegit-progit[0m
README          [01;34mcmake[0m         git.git-authors  [01;34msrc[0m
README.md       [01;34mdeps[0m          [01;34minclude[0m          [01;34mtests[0m
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit remote show origin[27mgit remote show origin
[?2004l* remote origin
  Fetch URL: https://github.com/libgit2/libgit2
  Push  URL: https://github.com/libgit2/libgit2
  HEAD branch: main
  Remote branches:
    bindings/libgit2sharp/022_1              tracked
    brianmario/attr-from-tree                tracked
    brianmario/revwalk-filter                tracked
    brianmario/trailer-info                  tracked
    brianmario/trailer-list                  tracked
    ci                                       tracked
    cmn/atexit-skeleton                      tracked
    cmn/cancellation                         tracked
    cmn/commit-on                            tracked
    cmn/ctest-jobs                           tracked
    cmn/delta-base-eviction                  tracked
    cmn/diff-binary-patch                    tracked
    cmn/dynamic-libssh2                      tracked
    cmn/example-pull                         tracked
    cmn/forbid-mutiurl                       tracked
    cmn/init-ssh                             tracked
    cmn/io-stream-backends                   tracked
    cmn/leaks                                tracked
    cmn/parallel-clar                        tracked
    cmn/pcre2                                tracked
    cmn/read-only-size                       tracked
    cmn/remote-options                       tracked
    cmn/repo-v1                              tracked
    cmn/reset-dont-free-url                  tracked
    cmn/server                               tracked
    cmn/sortedcache-close                    tracked
    cmn/tmp                                  tracked
    cmn/tree-parser-sort-input               tracked
    cmn/warnings                             tracked
    csware/system_proxy                      tracked
    development                              tracked
    diff-fails-with-cpp-file                 tracked
    enterprise/backport-2.6-4136-4178        tracked
    enterprise/backport-2.7-4136-4178        tracked
    enterprise/backport-2.8-4136-4178        tracked
    enterprise/backport-2.9-4136-4178        tracked
    ethomson/027                             tracked
    ethomson/checkout_conflict_respect_index tracked
    ethomson/checkout_safety                 tracked
    ethomson/ci                              tracked
    ethomson/ci_test_results                 tracked
    ethomson/cli                             tracked
    ethomson/cli_cmd_clone                   tracked
    ethomson/clone_namespaced                tracked
    ethomson/cmake                           tracked
    ethomson/cmake2                          tracked
    ethomson/cmake4                          tracked
    ethomson/cmake5                          tracked
    ethomson/cmake6                          tracked
    ethomson/codespaces                      tracked
    ethomson/diff_fail                       tracked
    ethomson/diff_regexp_ignore              tracked
    ethomson/docs                            tracked
    ethomson/extension_madness               tracked
    ethomson/filter_driver_git_buf           tracked
    ethomson/find_executable                 tracked
    ethomson/fix-stale-filesize-crash        tracked
    ethomson/follow_redirects                tracked
    ethomson/future                          tracked
    ethomson/init-bak                        tracked
    ethomson/is_and_from                     tracked
    ethomson/libssh2                         tracked
    ethomson/links                           tracked
    ethomson/main-is-1.7                     tracked
    ethomson/middleware                      tracked
    ethomson/nightlies                       tracked
    ethomson/no_qemu                         tracked
    ethomson/ntlm                            tracked
    ethomson/objectformat                    tracked
    ethomson/off_t_bak                       tracked
    ethomson/oid_cleanups                    tracked
    ethomson/oidmadness                      tracked
    ethomson/path_validation                 tracked
    ethomson/prng2                           tracked
    ethomson/racy-diff                       tracked
    ethomson/reference_cmp                   tracked
    ethomson/schannel                        tracked
    ethomson/schannel-2                      tracked
    ethomson/sha256_experimental-old         tracked
    ethomson/sha256_fix                      tracked
    ethomson/sha256_loose                    tracked
    ethomson/sha256_pack                     tracked
    ethomson/sha256_raw                      tracked
    ethomson/ssl_proxy                       tracked
    ethomson/ssl_refactor                    tracked
    ethomson/stream-truncated-writes         tracked
    ethomson/sysdir_test                     tracked
    ethomson/test_https                      tracked
    ethomson/test_urls_with_spaces           tracked
    ethomson/tlsdata_fail                    tracked
    ethomson/util                            tracked
    ethomson/util2                           tracked
    ethomson/util3                           tracked
    ethomson/util4                           tracked
    ethomson/util5                           tracked
    ethomson/util_as_a_directory             tracked
    ethomson/warnings                        tracked
    ethomson/winauth                         tracked
    ethomson/windows_ssh                     tracked
    ethomson/workflow                        tracked
    ethomson/xdiff                           tracked
    gh-pages                                 tracked
    jss/fix-ignore-pop                       tracked
    main                                     tracked
    maint/v0.21                              tracked
    maint/v0.22                              tracked
    maint/v0.23                              tracked
    maint/v0.24                              tracked
    maint/v0.25                              tracked
    maint/v0.26                              tracked
    maint/v0.27                              tracked
    maint/v0.28                              tracked
    maint/v0.99                              tracked
    maint/v1.0                               tracked
    maint/v1.1                               tracked
    maint/v1.2                               tracked
    maint/v1.3                               tracked
    maint/v1.4                               tracked
    maint/v1.5                               tracked
    maint/v1.6                               tracked
    pks-cmake-targets                        tracked
    precompose-test                          tracked
    rb/commit-modified-file                  tracked
    rb/object-parse-flexibility              tracked
    rb/test-builtin-drivers                  tracked
    rb/warnings-for-commit-headers           tracked
    users/ethomson/cmake2                    tracked
    vmg/read-types                           tracked
    vmg/repo-format-1                        tracked
  Local branch configured for 'git pull':
    main merges with remote main
  Local ref configured for 'git push':
    main pushes to main (fast-forwardable)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git remote rename [K[K[Kme pb paul
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git remote remove paul
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git tag
[?2004l[?1h=v0.1.0[m
v0.10.0[m
v0.11.0[m
v0.12.0[m
v0.13.0[m
v0.14.0[m
v0.15.0[m
v0.16.0[m
v0.17.0[m
v0.18.0[m
v0.19.0[m
v0.2.0[m
v0.20.0[m
v0.21.0[m
v0.21.0-rc1[m
v0.21.0-rc2[m
v0.21.1[m
v0.21.2[m
v0.21.3[m
v0.21.4[m
v0.21.5[m
v0.22.0[m
v0.22.0-rc1[m
v0.22.0-rc2[m
v0.22.1[m
v0.22.2[m
v0.22.3[m
v0.23.0[m
v0.23.0-rc1[m
v0.23.0-rc2[m
v0.23.1[m
v0.23.2[m
v0.23.3[m
:[K[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git show
[?2004l[?1h=[33mcommit 68b4bdf5a04917f9af3936312efe6a56abc9b3fe[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: sagnik-startv <sagnik.ganguly@tigeranalytics.com>[m
Date:   Sun Mar 12 23:49:29 2023 +0530[m
[m
    Deleting 2 files[m
[m
[1mdiff --git a/README b/README[m[m
[1mdeleted file mode 100644[m[m
[1mindex 56266d360..000000000[m[m
[1m--- a/README[m[m
[1m+++ /dev/null[m[m
[36m@@ -1 +0,0 @@[m[m
[31m-My Project[m[m
[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit status[27mgit status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 4 commits.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m
	[31msimplegit-progit/[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit log --pretty=oneline[27mgit log --pretty=oneline
[?2004l[?1h=[33m68b4bdf5a04917f9af3936312efe6a56abc9b3fe[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m Deleting 2 files[m
[33mfa0a13be8a0a53a78033e972ddbf54bf487b6656[m 3rd commit skipping staging are[m [33m[ma[m
[33m613a7211761592e3fe4f7ebe959daf6bf257ea94[m My second commit[m
[33m3ea14a47b814a7a440db2d4d9407f20f9312bf24[m My first commit[m
[33m8f8e805e3f37e49563c33a0c67fcf7f0d2e9101c[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m Merg[m [33m[m[33m[m[1;31m[m[33m[m[1;31m[m[33m[me pull request #6529 from libgit2/ethomson/include_sanity[m
[33mcbc5c6adfa8e0988b323d226c0439fe74e94bed6[m cmake: don't include `include/g[m [33m[mit2`[m
[33md066d0d95c43e97df6624292f3f527f9372ca8fe[m Merge pull request #6527 from B[m [33m[matchyx/batchyx/wchar-fixes[m
[33m20811c5aa9c528405eaa3f88ff22a9adebafa9e6[m sysdir: Do not declare win32 fu[m [33m[mnctions on non-win32 platforms[m
[33m8164b4816230711f1aeb8e474011f496f3bfdb98[m Merge pull request #6521 from l[m [33m[mibgit2/ethomson/weird_ignore[m
[33m129cadf9bf9ef1b43dd844d54f2b57a52b69ed2a[m index: support `git_index_add_a[m [33m[mll` directories with force[m
[33m309befe413d7ab68e8e410d8121af98467620792[m index: test `git_index_add_all`[m [33m[m with force[m
[33m6fb5ab372366a92ae36aac36e1427158c22f3278[m index: test `git_index_add_all`[m [33m[m with ignored folder[m
[33maf12fc11c520b58fe548a5ff736812462c269685[m Merge pull request #6520 from l[m [33m[mibgit2/ethomson/git_odb_open[m
[33m7445d510bec7885de4355c65dcf59c3b49f0859a[m Merge pull request #6513 from l[m [33m[mibgit2/ethomson/util_test_root[m
[33mc59d519c49e7b0e4ac35215829adf3af71033bd2[m Merge pull request #6518 from g[m [33m[meorgthegreat/patch-1[m
[33me1e0d77c6f1573ab1e332af3f4c7490059d78e3c[m odb: restore `git_odb_open`[m
[33m3770bf6766ade2eae8a7771dde8248322e68f879[m Remove unused wditer variable[m
[33m25ec37379ed07b10c4ecc6143cf6018cabc8f857[m[33m ([m[1;33mtag: v1.6.2[m[33m, [m[1;31morigin/maint/v1.6[m[33m[m [33m[m[33m[m[1;33m[m[33m[m[1;31m[m[33m)[m v1.6.2: update changelog[m
[33m9d1a3ef7c722d38c8d007627b3ae830c2e658929[m v1.6.2: update version numbers[m
[33mda82fb5471f0b8cf098a4711b086c08a92f5357f[m Merge pull request #6514 from l[m :[K[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit tag -a[27mgit tag -a
[?2004l[?1h=usage: git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>][m
               <tagname> [<head>][m
   or: git tag -d <tagname>...[m
   or: git tag -l [-n[<num>]] [--contains <commit>] [--no-contains <comm[m it>] [--points-at <object>][m
               [--format=<format>] [--merged <commit>] [--no-merged <com[m mit>] [<pattern>...][m
   or: git tag -v [--format=<format>] <tagname>...[m
[m
    -l, --list            list tag names[m
    -n[<n>]               print <n> lines of each tag message[m
    -d, --delete          delete tags[m
    -v, --verify          verify tags[m
[m
Tag creation options[m
    -a, --annotate        annotated tag, needs a message[m
    -m, --message <message>[m
                          tag message[m
    -F, --file <file>     read message from file[m
    -e, --edit            force edit of tag message[m
    -s, --sign            annotated and GPG-signed tag[m
    --cleanup <mode>      how to strip spaces and #comments from message[m
    -u, --local-user <key-id>[m
                          use another key to sign the tag[m
    -f, --force           replace the tag if exists[m
    --create-reflog       create a reflog[m
[m
Tag listing options[m
    --column[=<style>]    show tag list in columns[m
    --contains <commit>   print only tags that contain the commit[m
    --no-contains <commit>[m
                          print only tags that don't contain the commit[m
    --merged <commit>     print only tags that are merged[m
:[K[K [KESCESC[KOO[KBB[K    --no-merged <commit>  print only tags that are not merged[m
:[K[K [KESCESC[KOO[KBB[K    --sort <key>          field name to sort on[m
:[K[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mecho "will learn merge" > merge[27m[7m.[27m[7mtxt[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ echo "will learn merge" > merge.txt
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit add merge.txt[27mgit add merge.txt
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 4 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   merge.txt[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m
	[31msimplegit-progit/[m

[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git add [K[K[K[K[K[K[K[K[7mgit add merge.txt[27mgit add merge.txt
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7m13Pgit checkout -b hotfixlog --[27m[7mo[27m[7mneline --decorate --all --graph[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [14Pgit add merge.txt
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[Kcommit -m "Fourth commit"[1P[1@u
[?2004l[main fa42521d0] Fourth commit
 1 file changed, 1 insertion(+)
 create mode 100644 merge.txt
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7m13Pgit checkout -b hotfixlog --[27m[7mo[27m[7mneline --decorate --all --graph[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ 13Pgit checkout -b hotfixlog --oneline --decorate --all --graph[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit checkout -b hotfixlog --on[1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[Cgit checkout -b hotfixlog --one[1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [Cgit checkout -b hotfixlog --onel[1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ 

[?2004lerror: unknown option `oneline'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --guess               second guess 'git checkout <no-such-branch>' (default)
    --overlay             use overlay mode (default)
    -q, --quiet           suppress progress reporting
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting
    -m, --merge           perform a 3-way merge with the new branch
    --conflict <style>    conflict style (merge or diff3)
    -d, --detach          detach HEAD at named commit
    -t, --track           set upstream info for new branch
    -f, --force           force checkout (throw away local modifications)
    --orphan <new-branch>
                          new unparented branch
    --overwrite-ignore    update ignored files (default)
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git checkout master
[?2004lerror: pathspec 'master' did not match any file(s) known to git
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git checkout master[K[K[K[Kin
[?2004lAlready on 'main'
Your branch is ahead of 'origin/main' by 5 commits.
  (use "git push" to publish your local commits)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit merge hotfix[27mgit merge hotfix
[?2004lmerge: hotfix - not something we can merge
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git branch
[?2004l[?1h=* [32mmain[m[m
[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git checkout -b MI[K[Khotfix
[?2004lSwitched to a new branch 'hotfix'
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [7mgit checkout -b hotfixlog --one[27m[7ml[27m[7mine --decorate --all --graph[27m[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git checkout -b hotfixlog --oneline --decorate --all --graph[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C log --one[1@l[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004lerror: unknown option `oneline'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --guess               second guess 'git checkout <no-such-branch>' (default)
    --overlay             use overlay mode (default)
    -q, --quiet           suppress progress reporting
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting
    -m, --merge           perform a 3-way merge with the new branch
    --conflict <style>    conflict style (merge or diff3)
    -d, --detach          detach HEAD at named commit
    -t, --track           set upstream info for new branch
    -f, --force           force checkout (throw away local modifications)
    --orphan <new-branch>
                          new unparented branch
    --overwrite-ignore    update ignored files (default)
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git checkout -b hotfix log --oneline --decorate --all --graph[C[C[C[C[1P[1P[1P[1P[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -[C[1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --[1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --d[1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --de[1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C--dec[1P[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004lerror: unknown option `decorate'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --guess               second guess 'git checkout <no-such-branch>' (default)
    --overlay             use overlay mode (default)
    -q, --quiet           suppress progress reporting
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting
    -m, --merge           perform a 3-way merge with the new branch
    --conflict <style>    conflict style (merge or diff3)
    -d, --detach          detach HEAD at named commit
    -t, --track           set upstream info for new branch
    -f, --force           force checkout (throw away local modifications)
    --orphan <new-branch>
                          new unparented branch
    --overwrite-ignore    update ignored files (default)
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ echo "[Kfix.txt
[?2004lfix.txt
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git add fix.y[Ktxt
[?2004lfatal: pathspec 'fix.txt' did not match any files
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch hotfix
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m
	[31msimplegit-progit/[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git statusadd fix.txt[3Pecho[C[C[C[C[C[C[C[Cgit checkout -b hotfix log --decorate --all --graph[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cone[10@line --dec[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[12Pbranchcheckout -b hotfix
[?2004lfatal: A branch named 'hotfix' already exists.
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git checkout -b hotfix[1Photfix[1Photfix[1Photfix
[?2004lAlready on 'hotfix'
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git branch
[?2004l[?1h=* [32mhotfix[m[m
  main[m[m
[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git [K[K[K[Knano fix.txt
[?2004l[?2004h[?1049h[22;0;0t[1;34r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[32;31H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 6.2                     fix.txt                              [1;71H(B[m[33d(B[0;7m^G(B[m Help[15G(B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut[33;57H(B[0;7m^T(B[m Execute[34d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Paste[57G(B[0;7m^J(B[m Justify[2d[?12l[?25h[?25l[1;44H(B[0;7m*[71G(B[m[?12l[?25h[2dA[?25l[?12l[?25h [?25l[?12l[?25hb[?25l[?12l[?25hu[?25l[?12l[?25hg[?25l[?12l[?25h [?25l[?12l[?25hf[?25l[?12l[?25hi[?25l[?12l[?25hx[?25l[33;15H    (B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append  [55G(B[0;7mM-B(B[m Backup File[34;2H(B[0;7mC(B[m Cancel         (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend       (B[0;7m^T(B[m Browse[K[32d(B[0;7mFile Name to Write: fix.txt                                             [32;28H(B[m[?12l[?25h[?25l [1K (B[0;7m[ Writing... ](B[m[K[1;44H(B[0;7m [71G(B[m[32;29H(B[0;7m[ Wrote 1 line ](B[m[33;15H(B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut[55G  (B[0;7m^T(B[m Execute[K[34;2H(B[0;7mX(B[m Exit       (B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Paste      (B[0;7m^J(B[m Justify[?12l[?25h[2;10H[?25l[32d[J[34d[?12l[?25h[34;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch hotfix
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m
	[31mfix.txt[m
	[31msimplegit-progit/[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git add fix.txt
[?2004l[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git commit-[K -m "a fix"
[?2004l[hotfix 22330bdf3] a fix
 1 file changed, 1 insertion(+)
 create mode 100644 fix.txt
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git checkout main
[?2004lSwitched to branch 'main'
Your branch is ahead of 'origin/main' by 5 commits.
  (use "git push" to publish your local commits)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git merge hotfix
[?2004lUpdating fa42521d0..22330bdf3
Fast-forward
 fix.txt | 1 [32m+[m
 1 file changed, 1 insertion(+)
 create mode 100644 fix.txt
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git branch -d hotfix
[?2004lDeleted branch hotfix (was 22330bdf3).
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 6 commits.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m
	[31msimplegit-progit/[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ git branch
[?2004l[?1h=* [32mmain[m[m
[K[?1l>[?2004h]0;sagnik@TIGER01038: ~/my_project/mylibgit[01;32msagnik@TIGER01038[00m:[01;34m~/my_project/mylibgit[00m$ exit
[?2004lexit

Script done on 2023-03-13 00:13:30+05:30 [COMMAND_EXIT_CODE="0"]
